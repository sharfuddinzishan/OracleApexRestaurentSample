CREATE TABLE  "DESIGNATION" 
   (	"ID" NUMBER(10,0), 
	"DESIGNATION_NAME" VARCHAR2(30) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(50), 
	 CONSTRAINT "DESIGNATION_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "EMPLOYEE" 
   (	"ID" NUMBER(10,0), 
	"EMP_ID" VARCHAR2(10) NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(30) NOT NULL ENABLE, 
	"LAST_NAME" VARCHAR2(30), 
	"GENDER" VARCHAR2(10), 
	"ADDRESS" VARCHAR2(60), 
	"MOBILE_NO" VARCHAR2(15), 
	"EMAIL" VARCHAR2(30), 
	"SALARY" VARCHAR2(10), 
	"JOINING_DATE" DATE NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(20), 
	"IS_LOGIN" VARCHAR2(10) DEFAULT 'No', 
	"DESIGNATION" NUMBER, 
	"DESCRIPTION" VARCHAR2(500), 
	"COMMISSION" NUMBER, 
	 CONSTRAINT "EMPLOYEE_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "EMPLOYEE_CON_UK" UNIQUE ("EMP_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "TABLE_STATUS" 
   (	"STATUS_ID" NUMBER(10,0), 
	"STATUS" VARCHAR2(40) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(60), 
	 CONSTRAINT "TABLE_STATUS_PK" PRIMARY KEY ("STATUS_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "RTABLE" 
   (	"TABLE_ID" NUMBER(10,0), 
	"TABLE_NAME" VARCHAR2(40) NOT NULL ENABLE, 
	"TABLE_SIZE" NUMBER(3,0) NOT NULL ENABLE, 
	"TABLE_DESCRIPTION" VARCHAR2(60), 
	"STATUS_ID" NUMBER(10,0), 
	 CONSTRAINT "RTABLE_PK" PRIMARY KEY ("TABLE_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "RTABLE_CON_UK" UNIQUE ("TABLE_NAME")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "ORDER_STATUS" 
   (	"ORDER_STATUS_ID" NUMBER, 
	"ORDER_STATUS_NAME" VARCHAR2(15) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(100), 
	 CONSTRAINT "ORDER_STATUS_PK" PRIMARY KEY ("ORDER_STATUS_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "ORDER_STATUS_UK1" UNIQUE ("ORDER_STATUS_NAME")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "ORDER_DETAILS" 
   (	"ORDER_ID" NUMBER, 
	"TABLE_ID" NUMBER, 
	"AMOUNT" NUMBER, 
	"ORDER_STATUS_ID" NUMBER DEFAULT 0, 
	"TAKEN_BY" NUMBER(10,0), 
	"ORDER_TIMESTAMP" TIMESTAMP (6) WITH LOCAL TIME ZONE, 
	"DISCOUNT" NUMBER DEFAULT 0, 
	"ADJUSTED_DIS" NUMBER DEFAULT 0, 
	"VAT" NUMBER DEFAULT 0, 
	"AMOUNT_TO_BE_PAY" NUMBER DEFAULT 0, 
	"GIVEN_AMOUNT" NUMBER DEFAULT 0, 
	"DUE" NUMBER DEFAULT 0, 
	"PAYMENT_STATUS" NUMBER DEFAULT 0, 
	"AFTER_DIS_TOTAL" NUMBER DEFAULT 0, 
	"DISCOUNT_OTHERS" NUMBER DEFAULT 0, 
	 CONSTRAINT "ORDER_DETAILS_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "CUISINE" 
   (	"C_ID" NUMBER(10,0), 
	"C_NAME" VARCHAR2(30) NOT NULL ENABLE, 
	 CONSTRAINT "CUISINE_PK" PRIMARY KEY ("C_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "CUISINE_CON_U" UNIQUE ("C_NAME")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "CATEGORY" 
   (	"CAT_ID" NUMBER(10,0), 
	"CAT_NAME" VARCHAR2(40) NOT NULL ENABLE, 
	"C_ID" NUMBER(10,0), 
	 CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("CAT_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "CATEGORY_CON_UK_C_CAT_NAME" UNIQUE ("C_ID", "CAT_NAME")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "MENU_ITEM" 
   (	"M_ID" NUMBER(10,0), 
	"C_ID" NUMBER(10,0), 
	"CAT_ID" NUMBER(10,0), 
	"ITEM_NAME" VARCHAR2(50) NOT NULL ENABLE, 
	"PRICE" NUMBER(10,0), 
	"STOCK_STATUS" NUMBER(10,0) DEFAULT 2, 
	"FILE_NAME" VARCHAR2(100), 
	"FILE_MIMETYPE" VARCHAR2(100), 
	"FILE_DATE" DATE, 
	"FILE_DOC" BLOB, 
	"FILE_CHARSET" VARCHAR2(100), 
	"ITEM_STATUS" NUMBER(10,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(150), 
	 CONSTRAINT "MENU_ITEM_PK" PRIMARY KEY ("M_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "MENU_ITEM_CON_UK" UNIQUE ("ITEM_NAME")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "KITCHEN" 
   (	"K_ID" NUMBER(10,0), 
	"C_ID" NUMBER(10,0), 
	"CAT_ID" NUMBER(10,0), 
	"M_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"QUANTITY" NUMBER(10,0), 
	"ORDER_TAKEN" NUMBER(10,0) DEFAULT 0, 
	"ORDER_PROCESS" NUMBER(10,0) DEFAULT 0, 
	"STOCK" NUMBER DEFAULT 0, 
	 CONSTRAINT "KITCHEN_PK" PRIMARY KEY ("K_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "KITCHEN_CON_UK_C_CAT_M" UNIQUE ("C_ID", "CAT_ID", "M_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "KITCHEN_CON_UK_M" UNIQUE ("M_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "INVENTORY" 
   (	"ID" NUMBER(10,0), 
	"ITEM_NAME" VARCHAR2(50) NOT NULL ENABLE, 
	"WEIGHT" NUMBER(10,0), 
	"TOTAL_PRICE" NUMBER(10,0), 
	"BUY_DATE" DATE NOT NULL ENABLE, 
	 CONSTRAINT "INVENTORY_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "SERVICE_CHARGE" 
   (	"ID" NUMBER, 
	"TITLE" VARCHAR2(50) NOT NULL ENABLE, 
	"TYPE" VARCHAR2(50) NOT NULL ENABLE, 
	"CHARGE_PERCENT" NUMBER, 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"DSCRIPTION" VARCHAR2(100), 
	 CONSTRAINT "SERVICE_CHARGE_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "SERVICE_CHARGE_UK1" UNIQUE ("TITLE")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "ADD_PAYMENT" 
   (	"ORDER_ID" NUMBER(5,0), 
	"M_ID" NUMBER(5,0) NOT NULL ENABLE, 
	"PRICE" NUMBER(5,0) NOT NULL ENABLE, 
	"QUANTITY" NUMBER(5,0), 
	"ID" NUMBER, 
	"ORDER_QUANTITY" NUMBER DEFAULT 0, 
	"TOTAL" NUMBER GENERATED ALWAYS AS ("ORDER_QUANTITY"*"PRICE") VIRTUAL , 
	 CONSTRAINT "ADD_PAYMENT_CON" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "ADD_PAYMENT_CON_UK" UNIQUE ("ORDER_ID", "M_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "CATEGORY" ADD CONSTRAINT "CATEGORY_FK" FOREIGN KEY ("C_ID")
	  REFERENCES  "CUISINE" ("C_ID") ENABLE
/
ALTER TABLE  "EMPLOYEE" ADD CONSTRAINT "EMPLOYEE_CON_FK_DESIG" FOREIGN KEY ("DESIGNATION")
	  REFERENCES  "DESIGNATION" ("ID") ENABLE
/
ALTER TABLE  "KITCHEN" ADD CONSTRAINT "KITCHEN_CON_FK_C" FOREIGN KEY ("C_ID")
	  REFERENCES  "CUISINE" ("C_ID") ENABLE
/
ALTER TABLE  "KITCHEN" ADD CONSTRAINT "KITCHEN_CON_FK_CAT" FOREIGN KEY ("CAT_ID")
	  REFERENCES  "CATEGORY" ("CAT_ID") ENABLE
/
ALTER TABLE  "KITCHEN" ADD CONSTRAINT "KITCHEN_CON_FK_M" FOREIGN KEY ("M_ID")
	  REFERENCES  "MENU_ITEM" ("M_ID") ENABLE
/
ALTER TABLE  "MENU_ITEM" ADD CONSTRAINT "MENU_ITEM_CON_FK_C" FOREIGN KEY ("C_ID")
	  REFERENCES  "CUISINE" ("C_ID") ENABLE
/
ALTER TABLE  "MENU_ITEM" ADD CONSTRAINT "MENU_ITEM_CON_FK_CAT" FOREIGN KEY ("CAT_ID")
	  REFERENCES  "CATEGORY" ("CAT_ID") ENABLE
/
ALTER TABLE  "ORDER_DETAILS" ADD CONSTRAINT "ORDER_DETAILS_CON" FOREIGN KEY ("ORDER_STATUS_ID")
	  REFERENCES  "ORDER_STATUS" ("ORDER_STATUS_ID") ENABLE
/
ALTER TABLE  "ORDER_DETAILS" ADD CONSTRAINT "ORDER_DETAILS_FK" FOREIGN KEY ("TABLE_ID")
	  REFERENCES  "RTABLE" ("TABLE_ID") ENABLE
/
ALTER TABLE  "RTABLE" ADD CONSTRAINT "RTABLE_CON_FK" FOREIGN KEY ("STATUS_ID")
	  REFERENCES  "TABLE_STATUS" ("STATUS_ID") ENABLE
/
CREATE OR REPLACE EDITIONABLE FUNCTION  "CUSTOM_USER_AUTH" 
(p_username in varchar2,  
p_password in varchar2) return BOOLEAN is  
  
v_userName varchar2(12BYTE) :=upper(p_username);  
v_userPass varchar2(12BYTE) :=upper(p_password);  
v_userCount number;  
  
begin  
  
select count(*) into v_userCount  
from employee  
where emp_id like v_userName  
and  
password like v_userPass  
and IS_LOGIN like 'Yes';  
return v_userCount=1;  
  
end;  
/

CREATE UNIQUE INDEX  "ADD_PAYMENT_CON" ON  "ADD_PAYMENT" ("ID")
/
CREATE UNIQUE INDEX  "ADD_PAYMENT_CON_UK" ON  "ADD_PAYMENT" ("ORDER_ID", "M_ID")
/
CREATE UNIQUE INDEX  "CATEGORY_CON_UK_C_CAT_NAME" ON  "CATEGORY" ("C_ID", "CAT_NAME")
/
CREATE UNIQUE INDEX  "CATEGORY_PK" ON  "CATEGORY" ("CAT_ID")
/
CREATE UNIQUE INDEX  "CUISINE_CON_U" ON  "CUISINE" ("C_NAME")
/
CREATE UNIQUE INDEX  "CUISINE_PK" ON  "CUISINE" ("C_ID")
/
CREATE UNIQUE INDEX  "DESIGNATION_PK" ON  "DESIGNATION" ("ID")
/
CREATE UNIQUE INDEX  "EMPLOYEE_CON_UK" ON  "EMPLOYEE" ("EMP_ID")
/
CREATE UNIQUE INDEX  "EMPLOYEE_PK" ON  "EMPLOYEE" ("ID")
/
CREATE UNIQUE INDEX  "INVENTORY_PK" ON  "INVENTORY" ("ID")
/
CREATE UNIQUE INDEX  "KITCHEN_CON_UK_C_CAT_M" ON  "KITCHEN" ("C_ID", "CAT_ID", "M_ID")
/
CREATE UNIQUE INDEX  "KITCHEN_CON_UK_M" ON  "KITCHEN" ("M_ID")
/
CREATE UNIQUE INDEX  "KITCHEN_PK" ON  "KITCHEN" ("K_ID")
/
CREATE UNIQUE INDEX  "MENU_ITEM_CON_UK" ON  "MENU_ITEM" ("ITEM_NAME")
/
CREATE UNIQUE INDEX  "MENU_ITEM_PK" ON  "MENU_ITEM" ("M_ID")
/
CREATE UNIQUE INDEX  "ORDER_DETAILS_PK" ON  "ORDER_DETAILS" ("ORDER_ID")
/
CREATE UNIQUE INDEX  "ORDER_STATUS_PK" ON  "ORDER_STATUS" ("ORDER_STATUS_ID")
/
CREATE UNIQUE INDEX  "ORDER_STATUS_UK1" ON  "ORDER_STATUS" ("ORDER_STATUS_NAME")
/
CREATE UNIQUE INDEX  "RTABLE_CON_UK" ON  "RTABLE" ("TABLE_NAME")
/
CREATE UNIQUE INDEX  "RTABLE_PK" ON  "RTABLE" ("TABLE_ID")
/
CREATE UNIQUE INDEX  "SERVICE_CHARGE_PK" ON  "SERVICE_CHARGE" ("ID")
/
CREATE UNIQUE INDEX  "SERVICE_CHARGE_UK1" ON  "SERVICE_CHARGE" ("TITLE")
/
CREATE UNIQUE INDEX  "TABLE_STATUS_PK" ON  "TABLE_STATUS" ("STATUS_ID")
/
 CREATE SEQUENCE   "ADD_PAYMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 401 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "CATEGORY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "CUISINE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "DESIGNATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "EMPLOYEE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "INVENTORY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "KITCHEN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "MENU_ITEM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "ORDER_DETAILS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 461 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "ORDER_STATUS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "RTABLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SERVICE_CHARGE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "TABLE_STATUS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_ADD_PAYMENT" 
  before insert on "ADD_PAYMENT"                 
  for each row    
begin     
  if :NEW."ID" is null then   
    select "ADD_PAYMENT_SEQ".nextval into :NEW."ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_ADD_PAYMENT" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_CATEGORY" 
  before insert on "CATEGORY"                 
  for each row    
begin     
  if :NEW."CAT_ID" is null then   
    select "CATEGORY_SEQ".nextval into :NEW."CAT_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_CATEGORY" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_CUISINE" 
  before insert on "CUISINE"                 
  for each row    
begin     
  if :NEW."C_ID" is null then   
    select "CUISINE_SEQ".nextval into :NEW."C_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_CUISINE" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_DESIGNATION" 
  before insert on "DESIGNATION"                 
  for each row    
begin     
  if :NEW."ID" is null then   
    select "DESIGNATION_SEQ".nextval into :NEW."ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_DESIGNATION" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_EMPLOYEE" 
  before insert on "EMPLOYEE"                 
  for each row    
begin     
  if :NEW."ID" is null then   
    select "EMPLOYEE_SEQ".nextval into :NEW."ID" from sys.dual;   
  end if;   
end; 
 

/
ALTER TRIGGER  "BI_EMPLOYEE" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_INVENTORY" 
  before insert on "INVENTORY"                 
  for each row    
begin     
  if :NEW."ID" is null then   
    select "INVENTORY_SEQ".nextval into :NEW."ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_INVENTORY" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_KITCHEN" 
  before insert on "KITCHEN"                 
  for each row    
begin     
  if :NEW."K_ID" is null then   
    select "KITCHEN_SEQ".nextval into :NEW."K_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_KITCHEN" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_MENU_ITEM" 
  before insert on "MENU_ITEM"                 
  for each row    
begin     
  if :NEW."M_ID" is null then   
    select "MENU_ITEM_SEQ".nextval into :NEW."M_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_MENU_ITEM" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_ORDER_DETAILS" 
  before insert on "ORDER_DETAILS"                 
  for each row    
begin     
  if :NEW."ORDER_ID" is null then   
    select "ORDER_DETAILS_SEQ".nextval into :NEW."ORDER_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_ORDER_DETAILS" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_ORDER_STATUS" 
  before insert on "ORDER_STATUS"                 
  for each row    
begin     
  if :NEW."ORDER_STATUS_ID" is null then   
    select "ORDER_STATUS_SEQ".nextval into :NEW."ORDER_STATUS_ID" from sys.dual;   
  end if;   
end; 
 

/
ALTER TRIGGER  "BI_ORDER_STATUS" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_RTABLE" 
  before insert on "RTABLE"                 
  for each row    
begin     
  if :NEW."TABLE_ID" is null then   
    select "RTABLE_SEQ".nextval into :NEW."TABLE_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_RTABLE" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_SERVICE_CHARGE" 
  before insert on "SERVICE_CHARGE"                
  for each row   
begin    
  if :NEW."ID" is null then  
    select "SERVICE_CHARGE_SEQ".nextval into :NEW."ID" from sys.dual;  
  end if;  
end;  
 

/
ALTER TRIGGER  "BI_SERVICE_CHARGE" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_TABLE_STATUS" 
  before insert on "TABLE_STATUS"                 
  for each row    
begin     
  if :NEW."STATUS_ID" is null then   
    select "TABLE_STATUS_SEQ".nextval into :NEW."STATUS_ID" from sys.dual;   
  end if;   
end;   
  
 

/
ALTER TRIGGER  "BI_TABLE_STATUS" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "KITCHEN_T1" AFTER insert or update on "KITCHEN" for each row /* WHEN (NEW.quantity<= 0) */    WHEN (NEW.stock <= NEW.order_taken or NEW.stock=0 ) begin  
IF :NEW.stock=0 THEN  
update menu_item set stock_status=0,item_status=0 where m_id=:NEW.M_ID;  
ELSE  
update menu_item set stock_status=0 where m_id=:NEW.M_ID;  
END IF;  
end;  
  
 

/
ALTER TRIGGER  "KITCHEN_T1" ENABLE
/
